{"version":3,"file":"module.js","sources":["../node_modules/whatwg-fetch/fetch.js","../src/errors.js","../src/util.js","../src/api/index.js","../src/ad/index.js","../src/cache/index.js","../src/polyfill.js","../src/index.js"],"sourcesContent":["var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","/**\n * Invailde config\n * @param  {String} message is discription you want to add to the error.\n * @return {Error}          a new error with the correct name and message.\n */\nexport function invaildeConfig (message) {\n  const error = new Error(message);\n  error.name = 'invaildeConfig';\n  return error;\n}\n","import { invaildeConfig } from './errors';\n\n/**\n * Returns the window object that this script should inject into\n * @param  {Boolean} shouldBreak is whether or not the script should attempt\n *                               to break from iframe.\n * @return {Window} the working window\n */\nexport function getWindow (shouldBreak) {\n  let workingWindow = window;\n  if (shouldBreak) {\n    try {\n      while (workingWindow !== workingWindow.top) {\n        // The order here is important, as the first line may\n        // throw a security error and break the loop.\n        workingWindow.parent.location.href;\n        workingWindow = workingWindow.parent;\n      }\n    } catch (e) {}\n  }\n  return workingWindow;\n}\n\n/**\n * Search for <link rel=\"canonical\"> elements or fallback to use the page\n * localtion. If a \"userOverrideRef\" is defined than is returned but URL encoded\n * @param  {Object}  window          is the window object you want to get the\n *                                   canonical link tag from.\n * @param  {Boolean} inApp           is used to control if the page ref should\n *                                   be set to \"about:blank\" as it will cause\n *                                   errors to throw if \"window.localtion\" is\n *                                   accessed in some cases.\n * @param  {String}  userOverrideRef is the over the canonical or window\n *                                   localtion is specified.\n * @return {String}  canonical string or page localtion URL encoded\n */\nexport function getRef (window, inApp, userOverrideRef) {\n  if (\n    userOverrideRef &&\n    typeof userOverrideRef !== 'undefined' &&\n    userOverrideRef !== ''\n  ) {\n    return encodeURIComponent(userOverrideRef);\n  }\n\n  const links = window.document.getElementsByTagName('link');\n  const location = window.location.href;\n\n  let canonical = null;\n  let ref = '';\n\n  for (var i = 0; i < links.length; i++) {\n    if (links[i].rel === 'canonical') {\n      canonical = links[i].href;\n      break;\n    }\n  }\n\n  if (inApp) {\n    ref = 'about:blank';\n  } else {\n    ref = encodeURIComponent(canonical || location);\n  }\n\n  return ref;\n}\n\n/**\n * Binds the \"__f8\" object and API to the window\n * @param {String} version      is the version to bind the API under\n * @param {Object} targetWindow is window to bind the \"__f8\" object to\n */\nexport function bindf8ToWindow (version, targetWindow) {\n  if (!targetWindow.__f8) {\n    targetWindow.__f8 = {};\n  }\n\n  if (!targetWindow.__f8[version]) {\n    targetWindow.__f8[version] = {};\n  }\n\n  /**\n   * Check if key exists, returns existing value\n   * or replaces it with val\n   * @param  {String}   key        - Key to access value\n   * @param  {Function|Object} val - any value\n   * @return {Object}              - assigned value for key\n   */\n  targetWindow.__f8[version].setUndefinedProperty = function (key, val) {\n    if (targetWindow.__f8[version][key]) {\n      return targetWindow.__f8[version][key];\n    } else if (val) {\n      if (typeof val === 'function') {\n        targetWindow.__f8[version][key] = val();\n        return targetWindow.__f8[version][key];\n      } else {\n        targetWindow.__f8[version][key] = val;\n        return val;\n      }\n    } else {\n      throw new Error(\n        'Trying to access f8 v' +\n          version +\n          ' property ' +\n          key +\n          ', but its not defined'\n      );\n    }\n  };\n}\n\n/**\n * Injects a script tag onto the page\n * @param  {String} creativeSource is the URL for the script you want to append\n *                                 to the page.\n */\nexport function injectScriptFactory (creativeSource) {\n  var creativeTag = document.createElement('script');\n  creativeTag.type = 'text/javascript';\n  creativeTag.src = creativeSource;\n  creativeTag.async = 'async';\n  document.body.appendChild(creativeTag);\n}\n\n/**\n * Takes a config object and vaildates it\n * @param  {Object} config is the user defined config object\n * @return {Object}        the vaildated object\n */\nexport function vaildateConfig (config = {}) {\n  if (typeof config.instID === 'undefined' || config.instID === '') {\n    throw invaildeConfig('Missing \"instID\" in config');\n  }\n\n  if (typeof config.endpoint === 'undefined' || config.endpoint === '') {\n    config.endpoint = `https://fresh8.co/${config.instID}/raw`;\n  }\n\n  if (typeof config.inApp === 'undefined') {\n    config.inApp = false;\n  }\n\n  if (typeof config.shouldBreakOut === 'undefined') {\n    config.shouldBreakOut = false;\n  }\n\n  if (typeof config.listenOnPushState === 'undefined') {\n    config.listenOnPushState = false;\n  }\n\n  return config;\n}\n","import { getRef } from '../util';\nimport { invaildeConfig } from '../errors';\n\n/**\n * Makes a request to the ad server API building the URL from the config params\n * passed in.\n * @param  {Object} config is the configurations used to make the API reqeuest\n *                         E.G.\n *                         { slotID: 'f8-001'\n *                         , view: 'home-page' - optional\n *                         , clickTrackingRedirect: 'http://dfp.com?r=' - optional\n *                         , sport: 'football' - optional\n *                         , match: - optional\n *                         , competitorIDs: ['55436'] - optional Opta ID's\n *                         , competitors: ['Manchester United', 'Southampton'] - optinal\n *                         , competitionIDs: ['1245'] - optional Opta ID's\n *                         , competitions: ['Premier League'] - optional\n *                         , window: the window used to extra the page ref from\n *                         , inApp: false - optional\n *                         , endpoint: '' - optional\n *                         , linkSameWindow: true - optional\n *                         , brand: 'my-brand-name' - optional\n *                         , url: 'http://fresh8gaming.com' - optional\n *                         }\n * @return {Promise}\n */\nexport function requestAdData (config) {\n  const vaildatedConfig = vaildateRequestAdConf(config);\n  // Build the end point URL with the slot ID\n  const endpoint = constructRequestURL(vaildatedConfig.endpoint, {\n    slot: vaildatedConfig.slotID,\n    view: vaildatedConfig.view,\n    clickUrl: vaildatedConfig.clickTrackingRedirect,\n    sport: vaildatedConfig.sport,\n    match: vaildatedConfig.match,\n    competitorIds: vaildatedConfig.competitorIDs,\n    competitors: vaildatedConfig.competitors,\n    competitionIds: vaildatedConfig.competitionIDs,\n    competitions: vaildatedConfig.competitions,\n    linkSameWindow: vaildatedConfig.linkSameWindow,\n    brand: vaildatedConfig.brand,\n    ref: getRef(\n      vaildatedConfig.window,\n      vaildatedConfig.inApp,\n      vaildatedConfig.url\n    )\n  });\n  return fetch(endpoint, { credentials: 'include' })\n    .then(checkStatusCode)\n    .then(parseJSON);\n}\n\n/**\n * Checks the stats code on a response and rejects the promise chain if\n * less than 200 or greater than 300.\n * @param  {Object} response is the fetch response object\n * @return {(Promise.reject|Object)} a rejected promise or the reponse object\n */\nexport function checkStatusCode (response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  return Promise.reject('Server returned error: ' + response.status);\n}\n\n/**\n * Returns the json from a fetch request\n * @param  {Object} response is the fetch response object\n * @return {Object} the parsed JSON object\n */\nexport function parseJSON (response) {\n  if (response) {\n    return response.json();\n  }\n}\n\n/**\n * Builds the request URL from the config with the option to add extra\n * key/value.\n * @param  {Object} options is used for adding extra key values to the URL\n *                          as a query strings.\n * @return {String}         The constructed URL\n */\nexport function constructRequestURL (url, options = {}) {\n  const queryStringsOptions = Object.assign({}, options);\n\n  if (typeof queryStringsOptions.competitorIds !== 'undefined') {\n    queryStringsOptions.competitorIds = queryStringsOptions.competitorIds.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  if (typeof queryStringsOptions.competitors !== 'undefined') {\n    queryStringsOptions.competitors = queryStringsOptions.competitors.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  if (typeof queryStringsOptions.competitionIds !== 'undefined') {\n    queryStringsOptions.competitionIds = queryStringsOptions.competitionIds.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  if (typeof queryStringsOptions.competitions !== 'undefined') {\n    queryStringsOptions.competitions = queryStringsOptions.competitions.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  const queryString = buildQueryString(queryStringsOptions);\n  return url + queryString;\n}\n\n/**\n * Takes a requestAd conf object and vaildates it\n * @param  {Object} config is the user defined config object\n * @return {Object}        the vaildated object\n */\nexport function vaildateRequestAdConf (config = {}) {\n  if (typeof config.endpoint === 'undefined' || config.endpoint === '') {\n    throw invaildeConfig('Missing \"endpoint\"');\n  }\n\n  if (typeof config.slotID === 'undefined' || config.slotID === '') {\n    throw invaildeConfig('Missing \"slotID\"');\n  }\n\n  if (typeof config.window === 'undefined' || config.window === '') {\n    throw invaildeConfig('Missing \"window\"');\n  }\n\n  if (typeof config.inApp === 'undefined') {\n    config.inApp = false;\n  }\n\n  if (typeof config.shouldBreakOut === 'undefined') {\n    config.shouldBreakOut = false;\n  }\n\n  if (typeof config.linkSameWindow === 'undefined') {\n    config.linkSameWindow = false;\n  }\n\n  if (typeof config.competitorIDs === 'undefined') {\n    config.competitorIDs = [];\n  }\n\n  if (typeof config.competitors === 'undefined') {\n    config.competitors = [];\n  }\n\n  if (typeof config.competitionIDs === 'undefined') {\n    config.competitionIDs = [];\n  }\n\n  if (typeof config.competitions === 'undefined') {\n    config.competitions = [];\n  }\n\n  if (typeof config.listenOnPushState === 'undefined') {\n    config.listenOnPushState = false;\n  }\n\n  if (\n    (config.competitors.length !== 0 || config.competitions.length !== 0) &&\n    !config.sport\n  ) {\n    throw invaildeConfig(\n      'Sport is required if \"competitions\" or \"competitors\" is passed through in the config'\n    );\n  }\n\n  return config;\n}\n\n/**\n * Takes a dictionary and converts it to a queryString\n * @param  {Object} dictionary is a dictionary of string key's to\n *                             string values.\n * @return {String} a queryString in the form of `?key=val&keyTwo=valTwo`.\n */\nexport function buildQueryString (options) {\n  var queryString = '?';\n  Object.keys(options).forEach(function (option) {\n    var value = options[option];\n    if (value && value !== '' && value.length !== 0) {\n      if (Object.prototype.toString.call(value) === '[object Array]') {\n        queryString += option + '=' + value.join(',') + '&';\n      } else {\n        queryString += option + '=' + value + '&';\n      }\n    }\n  });\n\n  return queryString;\n}\n","import { requestAdData } from '../api/index';\nimport { injectScriptFactory } from '../util';\nimport { invaildeConfig } from '../errors';\n\nexport default class Ad {\n  /**\n   * A class for managing and loading a single ad\n   * @param {Object} config is the configurations used to make the API reqeuest\n   *                        { slotID: 'f8-001'\n   *                        , creativeFactoryCache: new Cache() - used for\n   *                          global cache factory look ups\n   *                       , view: 'home-page' - optional\n   *                       , clickTrackingRedirect: 'http://dfp.com?r=' - optional\n   *                       , sport: 'football' - optional\n   *                       , matchID: '85623' - optional Opta ID\n   *                       , competitorIDs: ['55436'] - optional Opta ID's\n   *                       , competitors: ['Manchester United', 'Southampton'] - optinal\n   *                       , competitionIDs: ['1245'] - optional Opta ID's\n   *                       , competitions: ['Premier League'] - optional\n   *                       , window: the window used to extra the page ref from\n   *                       , inApp: false - optional\n   *                       , endpoint: '' - optional\n   *                       , appendPoint: 'body' - required\n   *                       , linkSameWindow: true - optional\n   *                       , brand: 'my-brand-name' - optional\n   *                       , url: 'http://fresh8gaming.com' - optional\n   *                       }\n   */\n  constructor (config = {}) {\n    // Use to indercate if the ad has been distroyed.\n    this.active = false;\n    // awaitingFactory is used when slecting what ad classes require an creative\n    // factory.\n    this.awaitingFactory = true;\n    // selector is use for selecting the ad in the DOM and is set by the \"load\"\n    // method.\n    this.selector = null;\n    // creativeRef this the creative type. Set by the \"load\" method and updated\n    // by the \"_reload\" method.\n    this.creativeRef = null;\n    // creativePath is the path to the js file needed to load the ad. Set by the\n    // \"load\" method and updated by the \"_reload\" method.\n    this.creativePath = null;\n    // CSSPath is the path to the CSS file needed to load the brand. Set by the\n    // \"load\" method and updated by the \"_reload\" method.\n    this.CSSPath = null;\n    // data is the payload data for the ad factory. Set by the \"load\" method\n    // and updated by the \"_reload\" method.\n    this.data = null;\n    // env is the payload data for the ad factory. Set by the \"load\" method and\n    // updated by the \"_reload\" method.\n    this.env = null;\n    // loadResolvers env data for the ad factory. Set by the \"load\" method and\n    // updated by the \"_reload\" method.\n    this.loadResolvers = null;\n    // adInstance is a refernce to the ad instance loaded by the creative factory.\n    // Set by the \"load\" method and updated by the \"_reload\" method.\n    this.adInstance = null;\n    // config for the ad class.\n    this.config = vaildateConfig(config);\n    // creativeFactoryCache is the global cache for the creative factories.\n    this.creativeFactoryCache = config.creativeFactoryCache;\n    // window is a refernce to the window object used when make API requests.\n    this.window = config.window;\n    // is it an evo product (default to false)\n    this.evo = false;\n  }\n\n  /**\n   * Fetches the data for the ad and loads the ad on the page while updating a\n   * lot the ad's state.\n   * @return {Promise} Resolve when the ad finishes loading and returns an\n   *                   instance of the ad class.\n   */\n  load () {\n    return new Promise((resolve, reject) => {\n      // Construct the object for the request data\n      const requestConfig = {\n        slotID: this.config.slotID,\n        view: this.config.view,\n        clickTrackingRedirect: this.config.clickTrackingRedirect,\n        sport: this.config.sport,\n        match: this.config.match,\n        competitorIDs: this.config.competitorIDs,\n        competitors: this.config.competitors,\n        competitionIDs: this.config.competitionIDs,\n        competitions: this.config.competitions,\n        window: this.config.window,\n        inApp: this.config.inApp,\n        endpoint: this.config.endpoint,\n        appendPoint: this.config.appendPoint,\n        linkSameWindow: this.config.linkSameWindow,\n        url: this.config.url,\n        brand: this.config.brand\n      };\n      // Make the API request to the ad server\n      return requestAdData(requestConfig)\n        .then(payload => {\n          const resolvers = {\n            resolve,\n            reject\n          };\n          // Save the promise so it can be revoled after the creative script\n          // has loaded.\n          this.loadResolvers = resolvers;\n          // if env exists assume it\n          // Inject the scripts for each ad.\n          if (payload.env) {\n            this.evo = true;\n          }\n          if (this.evo) {\n            Object.keys(payload.products).forEach(product => {\n              this.creativeRef = payload.products[product].config;\n              this.CSSPath = payload.products[product].skin;\n              // this.CSSPath = `${payload.env.cdn}/${\n                //   payload.products[product].skin\n                // }.json`;\n              this.data = payload.products[product].instances[0];\n              this.env = payload.env;\n              this.creativePath = `${payload.env.cdn}/${\n                  payload.products[product].config\n                  }.js?v=${payload.env.version}`;\n              this.data.appendPoint = this.config.appendPoint;\n            });\n          } else {\n            Object.keys(payload).forEach(creativeRef => {\n              this.creativeRef = creativeRef;\n              this.CSSPath = payload[creativeRef].CSSPath;\n              this.data = payload[creativeRef].instances[0].data;\n              this.env = payload[creativeRef].instances[0].env;\n              this.creativePath = payload[creativeRef].creativePath;\n              this.data.appendPoint = this.config.appendPoint;\n            });\n          }\n          // If the ad is adhesion then it wont use the normal append point\n          // container selector.\n\n          if (this.env.adhesion) {\n            this.selector = '#f8-adhesion';\n          } else {\n            this.selector = `${this.config.appendPoint} .f8${this.creativeRef}`;\n          }\n          // Pass the data directly to the ad if we already have it's factory\n          // cached.\n          if (!this.awaitingFactory) {\n            return this._callCreativeFactory();\n            // Else just script for the ad factory and pass the data too it once\n            // the loaded event has been emited.\n          } else {\n            // Inject the ad factory script and wait for the load event\n            injectScriptFactory(this.creativePath);\n          }\n        })\n        .catch(reason => {\n          this.active = false;\n          reject(reason);\n        });\n    });\n  }\n\n  /**\n   * Reloads first destroys the current ad in place then requests new data\n   * from the ad serving API, if the creative ref exists in the factory cache\n   * then it's loaded. If not a new script is injected into the page and once\n   * loaded will be called by the ad.\n   * @return {Promise} Resolve when the ad finishes loading\n   */\n  reload () {\n    return new Promise((resolve, reject) => {\n      const requestConfig = {\n        slotID: this.config.slotID,\n        view: this.config.view,\n        clickTrackingRedirect: this.config.clickTrackingRedirect,\n        sport: this.config.sport,\n        match: this.config.match,\n        competitorIDs: this.config.competitorIDs,\n        competitors: this.config.competitors,\n        competitionIDs: this.config.competitionIDs,\n        competitions: this.config.competitions,\n        window: this.config.window,\n        inApp: this.config.inApp,\n        endpoint: this.config.endpoint,\n        appendPoint: this.config.appendPoint,\n        linkSameWindow: this.config.linkSameWindow,\n        url: this.config.url,\n        brand: this.config.brand\n      };\n\n      // Request the ad data\n      return requestAdData(requestConfig)\n        .then(payload => {\n          // Grab the creative ref from the playload\n          let creativeRef;\n          if (this.evo) {\n            creativeRef = payload.products[0].config;\n          } else {\n            creativeRef = Object.keys(payload)[0];\n          }\n          const resolvers = {\n            resolve,\n            reject\n          };\n\n          // Save the promises incase they need to be resolved by the inject\n          // script.\n          this.loadResolvers = resolvers;\n          // Distroy the current ad in place.\n          this.destroy();\n          // If the creative type has changed then switch the ad type and update\n          // the currently set creative ref/creative path in the class.\n          if (creativeRef !== this.creativeRef) {\n            this.creativeRef = creativeRef;\n            if (this.evo) {\n              this.creativePath = `${payload.env.cdn}/${\n                payload.products[0].config\n                }.js?v=${payload.env.version}`;\n            } else {\n              this.creativePath = payload[creativeRef].creativePath;\n            }\n            this._switchAdType();\n          }\n          if (this.evo) {\n            Object.keys(payload.products).forEach(product => {\n              this.CSSPath = payload.products[product].skin;\n              this.data = payload.products[product].instances[0];\n              this.env = payload.env;\n              this.data.appendPoint = this.config.appendPoint;\n            });\n          } else {\n            Object.keys(payload).forEach(creativeRef => {\n              this.CSSPath = payload[creativeRef].CSSPath;\n              this.data = payload[creativeRef].instances[0].data;\n              this.env = payload[creativeRef].instances[0].env;\n              this.data.appendPoint = this.config.appendPoint;\n            });\n          }\n\n          // Update the class selector based on the brand being used\n          this.selector = `${this.config.appendPoint} .f8${this.creativeRef}`;\n          // Finally call the creative factory to create the ad\n          return this._callCreativeFactory();\n        })\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Removes the ad from the DOM and cleans up any brand scripts added.\n   * @return {Promise} Resolves when finished.\n   */\n  destroy () {\n    // Only distroy the ad if it's currently active\n    if (this.active) {\n      const appEl = document.querySelector(this.selector);\n      // Remove the ad and the brand CSS\n      this.adInstance.destroy();\n      if (!this.evo) appEl.parentNode.removeChild(appEl);\n      this.active = false;\n    }\n  }\n\n  /**\n   * Swtich ad type changes get the ad factory for the new creative if it exists\n   * in the cache, otherwise it will inject a new script for it and wait for it\n   * load.\n   */\n  _switchAdType () {\n    if (this.creativeFactoryCache.exists(this.creativeRef)) {\n      this._setCreativeFactory(this.creativeFactoryCache.get(this.creativeRef));\n    } else {\n      this.awaitingFactory = true;\n      injectScriptFactory(this.creativePath);\n    }\n  }\n\n  /**\n   * Takes a creative factory and sets it as the current one in the class and\n   * also sets the state to not be waiting for a creative factory.\n   * @param {Function} creativeFactory is the creative factory you want to set.\n   */\n  _setCreativeFactory (creativeFactory) {\n    this.awaitingFactory = false;\n    this.creativeFactory = creativeFactory;\n  }\n\n  /**\n   * Calls the currently set creative factory if it's not waiting for one.\n   * @return {Promise} Resolves after the creative has been loaded on to the\n   * page.\n   */\n  _callCreativeFactory () {\n    if (!this.awaitingFactory) {\n      return this.creativeFactory(\n        this.env,\n        this.data,\n        this.CSSPath,\n        this.window\n      )\n        .then(adInstance => {\n          this.adInstance = adInstance;\n          this.active = true;\n          this.loadResolvers.resolve(this);\n        })\n        .catch(this.loadResolvers.reject);\n    }\n\n    return Promise.resolve();\n  }\n}\n\n/**\n * Vaildates the config for the ad class.\n * @param  {Object} config is the configurations you want to vaildate.\n * @return {Object}        the vaildated config.\n */\nexport function vaildateConfig (config = {}) {\n  if (typeof config.endpoint === 'undefined' || config.endpoint === '') {\n    throw invaildeConfig('Missing \"endpoint\"');\n  }\n\n  if (\n    typeof config.creativeFactoryCache === 'undefined' ||\n    config.creativeFactoryCache === ''\n  ) {\n    throw invaildeConfig('Missing \"creativeFactoryCache\"');\n  }\n\n  if (typeof config.slotID === 'undefined' || config.slotID === '') {\n    throw invaildeConfig('Missing \"slotID\"');\n  }\n\n  if (typeof config.appendPoint === 'undefined' || config.appendPoint === '') {\n    throw invaildeConfig('Missing \"appendPoint\"');\n  }\n\n  if (typeof config.window === 'undefined' || config.window === '') {\n    throw invaildeConfig('Missing \"window\"');\n  }\n\n  if (typeof config.inApp === 'undefined') {\n    config.inApp = false;\n  }\n\n  if (typeof config.shouldBreakOut === 'undefined') {\n    config.shouldBreakOut = false;\n  }\n\n  if (typeof config.linkSameWindow === 'undefined') {\n    config.linkSameWindow = false;\n  }\n\n  if (typeof config.competitorIDs === 'undefined') {\n    config.competitorIDs = [];\n  }\n\n  if (typeof config.competitors === 'undefined') {\n    config.competitors = [];\n  }\n\n  if (typeof config.competitionIDs === 'undefined') {\n    config.competitionIDs = [];\n  }\n\n  if (typeof config.competitions === 'undefined') {\n    config.competitions = [];\n  }\n\n  if (typeof config.listenOnPushState === 'undefined') {\n    config.listenOnPushState = false;\n  }\n\n  if (\n    (config.competitors.length !== 0 || config.competitions.length !== 0) &&\n    !config.sport\n  ) {\n    throw invaildeConfig(\n      'Sport is required if \"competitions\" or \"competitors\" is passed through in the config'\n    );\n  }\n\n  return config;\n}\n","export default class Cache {\n  /**\n   * A basic cache store class\n   */\n  constructor () {\n    this.cache = {};\n  }\n\n /**\n  * Set a value against a key in the store.\n  * @param  {String} key   is the name that you want to store the data under.\n  * @param  {*}      value is the data to you want to store.\n  */\n  put (key, value) {\n    this.cache[key] = value;\n  }\n\n  /**\n   * Remove a key/value pair from the store.\n   * @param {String} key is the name of the key you want to remove.\n   */\n  remove (key) {\n    if (this.cache[key]) {\n      delete this.cache[key];\n    }\n  }\n\n  /**\n   * Retrieve a value from the store using a key.\n   * @param  {String} key is the key you want to use to select cache value in\n   *                      the store.\n   * @return {*}          A cached value from the store if it exists.\n   */\n  get (key) {\n    return this.cache[key];\n  }\n\n  /**\n   * Checks if a value exists in the store.\n   * @param  {String} key is the key you want to use to check a value exists for.\n   * @return {Boolean}    whether the value exists or not.\n   */\n  exists (key) {\n    if (this.cache[key]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * Adds customEvent method to the window if it doesn't already exist.\n */\nexport function customEvent () {\n  if (typeof window.CustomEvent === 'function') {\n    return false;\n  }\n\n  function CustomEvent (event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n\n  CustomEvent.prototype = window.Event.prototype;\n\n  window.CustomEvent = CustomEvent;\n}\n\n/**\n * Monkey patches the pushState function to emit a custome event\n * \"__f8-history-push-state\" on call.\n * @return {Object} Factories to apply and revert the polyfill changes\n */\nexport function PolyfillHistoryPushState () {\n  const _historyPushState = window.history.pushState;\n  const historyPushStateEvent = new CustomEvent('__f8-history-push-state');\n\n  /**\n   * Restores the original \"window.history.pushState\" method\n   */\n  function restore () {\n    window.history.pushState = _historyPushState;\n  }\n\n  /**\n   * Applies the event dispatcher to the \"history.pushState\" method\n   */\n  function fill () {\n    history.pushState = addEventDispatch;\n  }\n\n  /**\n   * A polyfilled version of the history.pushState\" method with the\n   * \"__f8-history-push-state\" dispatched on call.\n   */\n  function addEventDispatch () {\n    const historyPushState = _historyPushState.apply(this, arguments);\n    window.dispatchEvent(historyPushStateEvent);\n    return historyPushState;\n  }\n\n  return {\n    restore,\n    fill\n  };\n}\n","import 'whatwg-fetch';\nimport Ad from './ad/index';\nimport Cache from './cache/index';\n\nimport { customEvent, PolyfillHistoryPushState } from './polyfill';\n\nimport { getWindow, bindf8ToWindow, vaildateConfig } from './util';\n\nconst version = '1.0.0';\n\nexport default class Fresh8 {\n  /**\n   * Fresh8 is a class that handles the injection of Fresh8 ads into a target\n   * based on slot ID.\n   * @param {Object} config is the global instance configurations E.G.\n   *                        { instID: '54ad56a213fe19232b646047'\n   *                        , shouldBreakOut: false  - optinal\n   *                        , listenOnPushState: false - optinal\n   *                        , inApp: false - optional\n   *                        , endpoint: '' - optional\n   *                        }\n   *                        For more details on these options please refer to\n   *                        the readme.\n   */\n  constructor (config) {\n    // Ad class\n    this.Ad = Ad;\n    // Adds polyfills for custome events.\n    customEvent();\n    // The vaildated user config.\n    this.config = vaildateConfig(config);\n    // The window that should be used to append the ad to.\n    this.window = getWindow(this.config.shouldBreakOut);\n    // A store for the currently loaded ads.\n    this.ads = [];\n    // Cache for the creative factories.\n    this.creativeFactoryCache = new Cache();\n    // Bind the \"__f8\" object to the current window. This is rquired by our ad\n    // factories.\n    bindf8ToWindow(version, this.window);\n    // Bind the global event listener that's fired when the ad factory is loaded.\n    this._addEventLisnters();\n    // Bind a custome event for push state changes.\n    if (this.config.listenOnPushState) {\n      this.polyfillHistoryPushState = new PolyfillHistoryPushState();\n      this.polyfillHistoryPushState.fill();\n    }\n  }\n\n  /**\n   * Request an ad by slot ID, this ad will be appended to the \"appendPoint\"\n   * @param  {Object} config defines want data you want to pass to the Fresh8\n   *                         ad system when injecting your ad. E.G.\n   *                         { slotID: 'f8-001' - required\n   *                         , url: 'http://fresh8gaming.com'\n   *                         , appendPoint: 'body' - required\n   *                         , view: 'home-page' - optional\n   *                         , clickTrackingRedirect: 'http://dfp.com?r='  - optional\n   *                         , sport: 'football' - optional\n   *                         , matchID: '85623' - optional Opta ID\n   *                         , competitorIDs: ['55436'] - optional Opta ID's\n   *                         , competitors: ['Manchester United', 'Southampton'] - optinal\n   *                         , competitionIDs: ['1245'] - optional Opta ID's\n   *                         , competitions: ['Premier League'] - optional\n   *                         , brand: 'my-brand-name' - optional\n   *                         }\n   *                         For more details on these options please refer to\n   *                         the readme.\n   * @return {Promise}       This is resolved or rejected based on if the ad\n   *                         loaded successfully or not.\n   */\n  requestAd (config = {}) {\n    return new Promise(resolve => {\n      // Add Fresh8 class data to request ad config\n      config.endpoint = this.config.endpoint;\n      config.window = this.window;\n      config.creativeFactoryCache = this.creativeFactoryCache;\n      // Create a new ad and\n      const ad = new this.Ad(config);\n\n      // Store the ad for reference\n      this.ads.push(ad);\n      // Load the ad a return the promise\n      return resolve(ad.load());\n    });\n  }\n\n  /**\n   * Cleans up any event lisnters/ads added by the class\n   */\n  remove () {\n    // Remove any added event lisnters\n    this._removeEventLisnters();\n    // Remove all the ads from the page\n    this.destroyAllAds();\n    // Restore the patch history push state\n    if (this.config.listenOnPushState) {\n      this.polyfillHistoryPushState.restore();\n    }\n  }\n\n  /**\n   * Reloads all the currently active ads on the page\n   * @return {Promise} containing references to the new ads\n   */\n  reloadAllAds () {\n    const activeAds = this.ads.filter(ad => ad.active);\n    return Promise.all(activeAds.map(ad => ad.reload()));\n  }\n\n  /**\n   * Destroys all currently active ads on the page\n   * @return {Promise} resolves on completion\n   */\n  destroyAllAds () {\n    const activeAds = this.ads.filter(ad => ad.active);\n    return Promise.all(activeAds.map(ad => ad.destroy()));\n  }\n\n  /**\n   * Adds the \"__f8-creative-script-loaded\" and \"__f8-history-push-state\" event\n   * lisnters to the window\n   */\n  _addEventLisnters () {\n    this.boundOnCreativeLoaded = this._onCreativeLoaded.bind(this);\n    this.boundOnHistoryPushStateChange = this._onHistoryPushStateChange.bind(\n      this\n    );\n    this.window.addEventListener(\n      '__f8-creative-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.addEventListener(\n      '__f8-product-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.addEventListener(\n      '__f8-history-push-state',\n      this.boundOnHistoryPushStateChange\n    );\n  }\n\n  /**\n   * Removes the \"__f8-creative-script-loaded\" and \"__f8-history-push-state\" event\n   * lisnters from the window\n   */\n  _removeEventLisnters () {\n    this.window.removeEventListener(\n      '__f8-creative-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.removeEventListener(\n      '__f8-product-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.removeEventListener(\n      '__f8-history-push-state',\n      this.boundOnHistoryPushStateChange\n    );\n  }\n\n  /**\n   * Handler for the script loaded event and set the creative factory on any\n   * ads that match the creative ref and are waiting for a creativeFactory.\n   * @param {Object} event is a custom event object\n   */\n  _onCreativeLoaded (event) {\n    // Cache the creative factory so we can re used it for other ads\n    this.creativeFactoryCache.put(event.creativeRef, event.creativeFactory);\n    // Loop over the ads and check if any that require a creative factory\n    // with the matching creative ref\n    this.ads.forEach(ad => {\n      if (ad.evo) {\n        if (ad.awaitingFactory && event.config === ad.creativeRef) {\n          // Set the creative factory\n          ad._setCreativeFactory(event.productFactory);\n          // Call the creative factory loading the ad onto the page\n          ad._callCreativeFactory();\n        }\n      } else {\n        if (ad.awaitingFactory && event.creativeRef === ad.creativeRef) {\n          // Set the creative factory\n          ad._setCreativeFactory(event.creativeFactory);\n          // Call the creative factory loading the ad onto the page\n          ad._callCreativeFactory();\n        }\n      }\n    });\n  }\n\n  /**\n   * Handels the push state change event that reloads all the currently active\n   * ads on the page\n   */\n  _onHistoryPushStateChange () {\n    this.reloadAllAds().catch();\n  }\n}\n"],"names":["support","searchParams","self","iterable","Symbol","blob","Blob","e","formData","arrayBuffer","isDataView","obj","DataView","prototype","isPrototypeOf","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","get","type","rejected","Error","then","text","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","normalizeMethod","method","upcased","toUpperCase","Request","input","options","url","credentials","mode","signal","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","DOMException","err","message","stack","create","constructor","fetch","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","invaildeConfig","getWindow","shouldBreak","workingWindow","window","top","parent","href","getRef","inApp","userOverrideRef","encodeURIComponent","links","document","getElementsByTagName","canonical","rel","bindf8ToWindow","version","targetWindow","__f8","setUndefinedProperty","val","injectScriptFactory","creativeSource","creativeTag","createElement","src","async","appendChild","vaildateConfig","config","instID","endpoint","shouldBreakOut","listenOnPushState","polyfill","requestAdData","vaildatedConfig","vaildateRequestAdConf","constructRequestURL","slotID","clickTrackingRedirect","sport","match","competitorIDs","competitors","competitionIDs","competitions","linkSameWindow","brand","checkStatusCode","parseJSON","queryStringsOptions","babelHelpers.extends","competitorIds","competitionIds","buildQueryString","queryString","option","Ad","active","awaitingFactory","selector","creativeRef","creativePath","CSSPath","data","env","loadResolvers","adInstance","creativeFactoryCache","evo","_this","appendPoint","resolvers","payload","products","product","skin","instances","cdn","adhesion","_callCreativeFactory","catch","reason","_this2","destroy","_switchAdType","appEl","querySelector","parentNode","removeChild","exists","_setCreativeFactory","creativeFactory","_this3","Cache","cache","customEvent","CustomEvent","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","PolyfillHistoryPushState","_historyPushState","history","pushState","historyPushStateEvent","addEventDispatch","historyPushState","apply","arguments","dispatchEvent","Fresh8","ads","_addEventLisnters","polyfillHistoryPushState","fill","ad","load","_removeEventLisnters","destroyAllAds","restore","activeAds","filter","all","reload","boundOnCreativeLoaded","_onCreativeLoaded","bind","boundOnHistoryPushStateChange","_onHistoryPushStateChange","put","productFactory","reloadAllAds"],"mappings":"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"}