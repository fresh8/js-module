{"version":3,"file":"browser.js","sources":["../src/errors.js","../src/util.js","../src/api/index.js","../node_modules/whatwg-fetch/fetch.js","../src/ad/index.js","../src/cache/index.js","../src/polyfill.js","../src/index.js","../src/browser.js"],"sourcesContent":["/**\n * Invailde config\n * @param  {String} message is discription you want to add to the error.\n * @return {Error}          a new error with the correct name and message.\n */\nexport function invaildeConfig (message) {\n  const error = new Error(message);\n  error.name = 'invaildeConfig';\n  return error;\n}\n","import { invaildeConfig } from './errors';\n\n/**\n * Returns the window object that this script should inject into\n * @param  {Boolean} shouldBreak is whether or not the script should attempt\n *                               to break from iframe.\n * @return {Window} the working window\n */\nexport function getWindow (shouldBreak) {\n  let workingWindow = window;\n  if (shouldBreak) {\n    try {\n      while (workingWindow !== workingWindow.top) {\n        // The order here is important, as the first line may\n        // throw a security error and break the loop.\n        workingWindow.parent.location.href;\n        workingWindow = workingWindow.parent;\n      }\n    } catch (e) {}\n  }\n  return workingWindow;\n}\n\n/**\n * Search for <link rel=\"canonical\"> elements or fallback to use the page\n * localtion. If a \"userOverrideRef\" is defined than is returned but URL encoded\n * @param  {Object}  window          is the window object you want to get the\n *                                   canonical link tag from.\n * @param  {Boolean} inApp           is used to control if the page ref should\n *                                   be set to \"about:blank\" as it will cause\n *                                   errors to throw if \"window.localtion\" is\n *                                   accessed in some cases.\n * @param  {String}  userOverrideRef is the over the canonical or window\n *                                   localtion is specified.\n * @return {String}  canonical string or page localtion URL encoded\n */\nexport function getRef (window, inApp, userOverrideRef) {\n  if (\n    userOverrideRef &&\n    typeof userOverrideRef !== 'undefined' &&\n    userOverrideRef !== ''\n  ) {\n    return encodeURIComponent(userOverrideRef);\n  }\n\n  const links = window.document.getElementsByTagName('link');\n  const location = window.location.href;\n\n  let canonical = null;\n  let ref = '';\n\n  for (var i = 0; i < links.length; i++) {\n    if (links[i].rel === 'canonical') {\n      canonical = links[i].href;\n      break;\n    }\n  }\n\n  if (inApp) {\n    ref = 'about:blank';\n  } else {\n    ref = encodeURIComponent(canonical || location);\n  }\n\n  return ref;\n}\n\n/**\n * Binds the \"__f8\" object and API to the window\n * @param {String} version      is the version to bind the API under\n * @param {Object} targetWindow is window to bind the \"__f8\" object to\n */\nexport function bindf8ToWindow (version, targetWindow) {\n  if (!targetWindow.__f8) {\n    targetWindow.__f8 = {};\n  }\n\n  if (!targetWindow.__f8[version]) {\n    targetWindow.__f8[version] = {};\n  }\n\n  /**\n   * Check if key exists, returns existing value\n   * or replaces it with val\n   * @param  {String}   key        - Key to access value\n   * @param  {Function|Object} val - any value\n   * @return {Object}              - assigned value for key\n   */\n  targetWindow.__f8[version].setUndefinedProperty = function (key, val) {\n    if (targetWindow.__f8[version][key]) {\n      return targetWindow.__f8[version][key];\n    } else if (val) {\n      if (typeof val === 'function') {\n        targetWindow.__f8[version][key] = val();\n        return targetWindow.__f8[version][key];\n      } else {\n        targetWindow.__f8[version][key] = val;\n        return val;\n      }\n    } else {\n      throw new Error(\n        'Trying to access f8 v' +\n          version +\n          ' property ' +\n          key +\n          ', but its not defined'\n      );\n    }\n  };\n}\n\n/**\n * Injects a script tag onto the page\n * @param  {String} creativeSource is the URL for the script you want to append\n *                                 to the page.\n */\nexport function injectScriptFactory (creativeSource) {\n  var creativeTag = document.createElement('script');\n  creativeTag.type = 'text/javascript';\n  creativeTag.src = creativeSource;\n  creativeTag.async = 'async';\n  document.body.appendChild(creativeTag);\n}\n\n/**\n * Takes a config object and vaildates it\n * @param  {Object} config is the user defined config object\n * @return {Object}        the vaildated object\n */\nexport function vaildateConfig (config = {}) {\n  if (typeof config.instID === 'undefined' || config.instID === '') {\n    throw invaildeConfig('Missing \"instID\" in config');\n  }\n\n  if (typeof config.endpoint === 'undefined' || config.endpoint === '') {\n    config.endpoint = `https://fresh8.co/${config.instID}/raw`;\n  }\n\n  if (typeof config.inApp === 'undefined') {\n    config.inApp = false;\n  }\n\n  if (typeof config.shouldBreakOut === 'undefined') {\n    config.shouldBreakOut = false;\n  }\n\n  if (typeof config.listenOnPushState === 'undefined') {\n    config.listenOnPushState = false;\n  }\n\n  return config;\n}\n","import { getRef } from '../util';\nimport { invaildeConfig } from '../errors';\n\n/**\n * Makes a request to the ad server API building the URL from the config params\n * passed in.\n * @param  {Object} config is the configurations used to make the API reqeuest\n *                         E.G.\n *                         { slotID: 'f8-001'\n *                         , view: 'home-page' - optional\n *                         , clickTrackingRedirect: 'http://dfp.com?r=' - optional\n *                         , sport: 'football' - optional\n *                         , match: - optional\n *                         , competitorIDs: ['55436'] - optional Opta ID's\n *                         , competitors: ['Manchester United', 'Southampton'] - optinal\n *                         , competitionIDs: ['1245'] - optional Opta ID's\n *                         , competitions: ['Premier League'] - optional\n *                         , window: the window used to extra the page ref from\n *                         , inApp: false - optional\n *                         , endpoint: '' - optional\n *                         , linkSameWindow: true - optional\n *                         , brand: 'my-brand-name' - optional\n *                         , url: 'http://fresh8gaming.com' - optional\n *                         }\n * @return {Promise}\n */\nexport function requestAdData (config) {\n  const vaildatedConfig = vaildateRequestAdConf(config);\n  // Build the end point URL with the slot ID\n  const endpoint = constructRequestURL(vaildatedConfig.endpoint, {\n    slot: vaildatedConfig.slotID,\n    view: vaildatedConfig.view,\n    clickUrl: vaildatedConfig.clickTrackingRedirect,\n    sport: vaildatedConfig.sport,\n    match: vaildatedConfig.match,\n    competitorIds: vaildatedConfig.competitorIDs,\n    competitors: vaildatedConfig.competitors,\n    competitionIds: vaildatedConfig.competitionIDs,\n    competitions: vaildatedConfig.competitions,\n    linkSameWindow: vaildatedConfig.linkSameWindow,\n    brand: vaildatedConfig.brand,\n    ref: getRef(\n      vaildatedConfig.window,\n      vaildatedConfig.inApp,\n      vaildatedConfig.url\n    )\n  });\n  return fetch(endpoint, { credentials: 'include' })\n    .then(checkStatusCode)\n    .then(parseJSON);\n}\n\n/**\n * Checks the stats code on a response and rejects the promise chain if\n * less than 200 or greater than 300.\n * @param  {Object} response is the fetch response object\n * @return {(Promise.reject|Object)} a rejected promise or the reponse object\n */\nexport function checkStatusCode (response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  return Promise.reject('Server returned error: ' + response.status);\n}\n\n/**\n * Returns the json from a fetch request\n * @param  {Object} response is the fetch response object\n * @return {Object} the parsed JSON object\n */\nexport function parseJSON (response) {\n  if (response) {\n    return response.json();\n  }\n}\n\n/**\n * Builds the request URL from the config with the option to add extra\n * key/value.\n * @param  {Object} options is used for adding extra key values to the URL\n *                          as a query strings.\n * @return {String}         The constructed URL\n */\nexport function constructRequestURL (url, options = {}) {\n  const queryStringsOptions = Object.assign({}, options);\n\n  if (typeof queryStringsOptions.competitorIds !== 'undefined') {\n    queryStringsOptions.competitorIds = queryStringsOptions.competitorIds.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  if (typeof queryStringsOptions.competitors !== 'undefined') {\n    queryStringsOptions.competitors = queryStringsOptions.competitors.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  if (typeof queryStringsOptions.competitionIds !== 'undefined') {\n    queryStringsOptions.competitionIds = queryStringsOptions.competitionIds.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  if (typeof queryStringsOptions.competitions !== 'undefined') {\n    queryStringsOptions.competitions = queryStringsOptions.competitions.map(\n      value => encodeURIComponent(value)\n    );\n  }\n\n  const queryString = buildQueryString(queryStringsOptions);\n  return url + queryString;\n}\n\n/**\n * Takes a requestAd conf object and vaildates it\n * @param  {Object} config is the user defined config object\n * @return {Object}        the vaildated object\n */\nexport function vaildateRequestAdConf (config = {}) {\n  if (typeof config.endpoint === 'undefined' || config.endpoint === '') {\n    throw invaildeConfig('Missing \"endpoint\"');\n  }\n\n  if (typeof config.slotID === 'undefined' || config.slotID === '') {\n    throw invaildeConfig('Missing \"slotID\"');\n  }\n\n  if (typeof config.window === 'undefined' || config.window === '') {\n    throw invaildeConfig('Missing \"window\"');\n  }\n\n  if (typeof config.inApp === 'undefined') {\n    config.inApp = false;\n  }\n\n  if (typeof config.shouldBreakOut === 'undefined') {\n    config.shouldBreakOut = false;\n  }\n\n  if (typeof config.linkSameWindow === 'undefined') {\n    config.linkSameWindow = false;\n  }\n\n  if (typeof config.competitorIDs === 'undefined') {\n    config.competitorIDs = [];\n  }\n\n  if (typeof config.competitors === 'undefined') {\n    config.competitors = [];\n  }\n\n  if (typeof config.competitionIDs === 'undefined') {\n    config.competitionIDs = [];\n  }\n\n  if (typeof config.competitions === 'undefined') {\n    config.competitions = [];\n  }\n\n  if (typeof config.listenOnPushState === 'undefined') {\n    config.listenOnPushState = false;\n  }\n\n  if (\n    (config.competitors.length !== 0 || config.competitions.length !== 0) &&\n    !config.sport\n  ) {\n    throw invaildeConfig(\n      'Sport is required if \"competitions\" or \"competitors\" is passed through in the config'\n    );\n  }\n\n  return config;\n}\n\n/**\n * Takes a dictionary and converts it to a queryString\n * @param  {Object} dictionary is a dictionary of string key's to\n *                             string values.\n * @return {String} a queryString in the form of `?key=val&keyTwo=valTwo`.\n */\nexport function buildQueryString (options) {\n  var queryString = '?';\n  Object.keys(options).forEach(function (option) {\n    var value = options[option];\n    if (value && value !== '' && value.length !== 0) {\n      if (Object.prototype.toString.call(value) === '[object Array]') {\n        queryString += option + '=' + value.join(',') + '&';\n      } else {\n        queryString += option + '=' + value + '&';\n      }\n    }\n  });\n\n  return queryString;\n}\n","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n","import { requestAdData } from '../api/index';\nimport { injectScriptFactory } from '../util';\nimport { invaildeConfig } from '../errors';\n\nexport default class Ad {\n  /**\n   * A class for managing and loading a single ad\n   * @param {Object} config is the configurations used to make the API reqeuest\n   *                        { slotID: 'f8-001'\n   *                        , creativeFactoryCache: new Cache() - used for\n   *                          global cache factory look ups\n   *                       , view: 'home-page' - optional\n   *                       , clickTrackingRedirect: 'http://dfp.com?r=' - optional\n   *                       , sport: 'football' - optional\n   *                       , matchID: '85623' - optional Opta ID\n   *                       , competitorIDs: ['55436'] - optional Opta ID's\n   *                       , competitors: ['Manchester United', 'Southampton'] - optinal\n   *                       , competitionIDs: ['1245'] - optional Opta ID's\n   *                       , competitions: ['Premier League'] - optional\n   *                       , window: the window used to extra the page ref from\n   *                       , inApp: false - optional\n   *                       , endpoint: '' - optional\n   *                       , appendPoint: 'body' - required\n   *                       , linkSameWindow: true - optional\n   *                       , brand: 'my-brand-name' - optional\n   *                       , url: 'http://fresh8gaming.com' - optional\n   *                       }\n   */\n  constructor (config = {}) {\n    // Use to indercate if the ad has been distroyed.\n    this.active = false;\n    // awaitingFactory is used when slecting what ad classes require an creative\n    // factory.\n    this.awaitingFactory = true;\n    // selector is use for selecting the ad in the DOM and is set by the \"load\"\n    // method.\n    this.selector = null;\n    // creativeRef this the creative type. Set by the \"load\" method and updated\n    // by the \"_reload\" method.\n    this.creativeRef = null;\n    // creativePath is the path to the js file needed to load the ad. Set by the\n    // \"load\" method and updated by the \"_reload\" method.\n    this.creativePath = null;\n    // CSSPath is the path to the CSS file needed to load the brand. Set by the\n    // \"load\" method and updated by the \"_reload\" method.\n    this.CSSPath = null;\n    // data is the payload data for the ad factory. Set by the \"load\" method\n    // and updated by the \"_reload\" method.\n    this.data = null;\n    // env is the payload data for the ad factory. Set by the \"load\" method and\n    // updated by the \"_reload\" method.\n    this.env = null;\n    // loadResolvers env data for the ad factory. Set by the \"load\" method and\n    // updated by the \"_reload\" method.\n    this.loadResolvers = null;\n    // adInstance is a refernce to the ad instance loaded by the creative factory.\n    // Set by the \"load\" method and updated by the \"_reload\" method.\n    this.adInstance = null;\n    // config for the ad class.\n    this.config = vaildateConfig(config);\n    // creativeFactoryCache is the global cache for the creative factories.\n    this.creativeFactoryCache = config.creativeFactoryCache;\n    // window is a refernce to the window object used when make API requests.\n    this.window = config.window;\n    // is it an evo product (default to false)\n    this.evo = false;\n  }\n\n  /**\n   * Fetches the data for the ad and loads the ad on the page while updating a\n   * lot the ad's state.\n   * @return {Promise} Resolve when the ad finishes loading and returns an\n   *                   instance of the ad class.\n   */\n  load () {\n    return new Promise((resolve, reject) => {\n      // Construct the object for the request data\n      const requestConfig = {\n        slotID: this.config.slotID,\n        view: this.config.view,\n        clickTrackingRedirect: this.config.clickTrackingRedirect,\n        sport: this.config.sport,\n        match: this.config.match,\n        competitorIDs: this.config.competitorIDs,\n        competitors: this.config.competitors,\n        competitionIDs: this.config.competitionIDs,\n        competitions: this.config.competitions,\n        window: this.config.window,\n        inApp: this.config.inApp,\n        endpoint: this.config.endpoint,\n        appendPoint: this.config.appendPoint,\n        linkSameWindow: this.config.linkSameWindow,\n        url: this.config.url,\n        brand: this.config.brand\n      };\n      // Make the API request to the ad server\n      requestAdData(requestConfig)\n        .then(payload => {\n          const resolvers = {\n            resolve,\n            reject\n          };\n          // Save the promise so it can be revoled after the creative script\n          // has loaded.\n          this.loadResolvers = resolvers;\n          // if env exists assume it\n          // Inject the scripts for each ad.\n\n          if (!payload.env) {\n            Object.keys(payload).forEach(creativeRef => {\n              this.creativeRef = creativeRef;\n              this.CSSPath = payload[creativeRef].CSSPath;\n              this.data = payload[creativeRef].instances[0].data;\n              this.env = payload[creativeRef].instances[0].env;\n              this.creativePath = payload[creativeRef].creativePath;\n              this.data.appendPoint = this.config.appendPoint;\n            });\n          } else if (payload.env) {\n            this.evo = true;\n            Object.keys(payload.products).forEach(product => {\n              this.creativeRef = payload.products[product].config;\n              this.CSSPath = payload.products[product].skin;\n              // this.CSSPath = `${payload.env.cdn}/${\n              //   payload.products[product].skin\n              // }.json`;\n              this.data = payload.products[product].instances[0];\n              this.env = payload.env;\n              this.creativePath = `${payload.env.cdn}/${\n                payload.products[product].config\n              }.js?v=${payload.env.version}`;\n              this.data.appendPoint = this.config.appendPoint;\n            });\n          }\n\n          // If the ad is adhesion then it wont use the normal append point\n          // container selector.\n          if (this.env.adhesion) {\n            this.selector = '#f8-adhesion';\n          } else {\n            this.selector = `${this.config.appendPoint} .f8${this.creativeRef}`;\n          }\n          // Pass the data directly to the ad if we already have it's factory\n          // cached.\n          if (!this.awaitingFactory) {\n            this._callCreativeFactory();\n            // Else just script for the ad factory and pass the data too it once\n            // the loaded event has been emited.\n          } else {\n            // Inject the ad factory script and wait for the load event\n            injectScriptFactory(this.creativePath);\n          }\n        })\n\n        .catch(reason => {\n          this.active = false;\n          reject(reason);\n        });\n    });\n  }\n\n  /**\n   * Reloads first destroys the current ad in place then requests new data\n   * from the ad serving API, if the creative ref exists in the factory cache\n   * then it's loaded. If not a new script is injected into the page and once\n   * loaded will be called by the ad.\n   * @return {Promise} Resolve when the ad finishes loading\n   */\n  reload () {\n    return new Promise((resolve, reject) => {\n      const requestConfig = {\n        slotID: this.config.slotID,\n        view: this.config.view,\n        clickTrackingRedirect: this.config.clickTrackingRedirect,\n        sport: this.config.sport,\n        match: this.config.match,\n        competitorIDs: this.config.competitorIDs,\n        competitors: this.config.competitors,\n        competitionIDs: this.config.competitionIDs,\n        competitions: this.config.competitions,\n        window: this.config.window,\n        inApp: this.config.inApp,\n        endpoint: this.config.endpoint,\n        appendPoint: this.config.appendPoint,\n        linkSameWindow: this.config.linkSameWindow,\n        url: this.config.url,\n        brand: this.config.brand\n      };\n\n      // Request the ad data\n      requestAdData(requestConfig)\n        .then(payload => {\n          // Grab the creative ref from the playload\n          const creativeRef = Object.keys(payload)[0];\n          const resolvers = {\n            resolve,\n            reject\n          };\n\n          // Save the promises incase they need to be resolved by the inject\n          // script.\n          this.loadResolvers = resolvers;\n          // Distroy the current ad in place.\n          this.destroy();\n          // If the creative type has changed then switch the ad type and update\n          // the currently set creative ref/creative path in the class.\n          if (creativeRef !== this.creativeRef) {\n            this.creativeRef = creativeRef;\n            this.creativePath = payload[creativeRef].creativePath;\n            this._switchAdType();\n          }\n\n          // Update the data state.\n          this.data = payload[this.creativeRef].instances[0].data;\n          // Update the env data.\n          this.env = payload[this.creativeRef].instances[0].env;\n          // Update the CSS file path.\n          this.CSSPath = payload[this.creativeRef].CSSPath;\n          // Force the append point in the data to match the one that the class\n          // is using.\n          this.data.appendPoint = this.config.appendPoint;\n          // Update the class selector based on the brand being used\n          this.selector = `${this.config.appendPoint} .f8${this.creativeRef}`;\n          // Finally call the creative factory to create the ad\n          return this._callCreativeFactory();\n        })\n        .catch(reject);\n    });\n  }\n\n  /**\n   * Removes the ad from the DOM and cleans up any brand scripts added.\n   * @return {Promise} Resolves when finished.\n   */\n  destroy () {\n    // Only distroy the ad if it's currently active\n    if (this.active) {\n      const appEl = document.querySelector(this.selector);\n      // Remove the ad and the brand CSS\n      this.adInstance.destroy();\n      appEl.parentNode.removeChild(appEl);\n      this.active = false;\n    }\n  }\n\n  /**\n   * Swtich ad type changes get the ad factory for the new creative if it exists\n   * in the cache, otherwise it will inject a new script for it and wait for it\n   * load.\n   */\n  _switchAdType () {\n    if (this.creativeFactoryCache.exists(this.creativeRef)) {\n      this._setCreativeFactory(this.creativeFactoryCache.get(this.creativeRef));\n    } else {\n      this.awaitingFactory = true;\n      injectScriptFactory(this.creativePath);\n    }\n  }\n\n  /**\n   * Takes a creative factory and sets it as the current one in the class and\n   * also sets the state to not be waiting for a creative factory.\n   * @param {Function} creativeFactory is the creative factory you want to set.\n   */\n  _setCreativeFactory (creativeFactory) {\n    this.awaitingFactory = false;\n    this.creativeFactory = creativeFactory;\n  }\n\n  /**\n   * Calls the currently set creative factory if it's not waiting for one.\n   * @return {Promise} Resolves after the creative has been loaded on to the\n   * page.\n   */\n  _callCreativeFactory () {\n    if (!this.awaitingFactory) {\n      return this.creativeFactory(\n        this.env,\n        this.data,\n        this.CSSPath,\n        this.window\n      )\n        .then(adInstance => {\n          this.adInstance = adInstance;\n          this.active = true;\n          this.loadResolvers.resolve(this);\n        })\n        .catch(this.loadResolvers.reject);\n    }\n\n    return Promise.resolve();\n  }\n}\n\n/**\n * Vaildates the config for the ad class.\n * @param  {Object} config is the configurations you want to vaildate.\n * @return {Object}        the vaildated config.\n */\nexport function vaildateConfig (config = {}) {\n  if (typeof config.endpoint === 'undefined' || config.endpoint === '') {\n    throw invaildeConfig('Missing \"endpoint\"');\n  }\n\n  if (\n    typeof config.creativeFactoryCache === 'undefined' ||\n    config.creativeFactoryCache === ''\n  ) {\n    throw invaildeConfig('Missing \"creativeFactoryCache\"');\n  }\n\n  if (typeof config.slotID === 'undefined' || config.slotID === '') {\n    throw invaildeConfig('Missing \"slotID\"');\n  }\n\n  if (typeof config.appendPoint === 'undefined' || config.appendPoint === '') {\n    throw invaildeConfig('Missing \"appendPoint\"');\n  }\n\n  if (typeof config.window === 'undefined' || config.window === '') {\n    throw invaildeConfig('Missing \"window\"');\n  }\n\n  if (typeof config.inApp === 'undefined') {\n    config.inApp = false;\n  }\n\n  if (typeof config.shouldBreakOut === 'undefined') {\n    config.shouldBreakOut = false;\n  }\n\n  if (typeof config.linkSameWindow === 'undefined') {\n    config.linkSameWindow = false;\n  }\n\n  if (typeof config.competitorIDs === 'undefined') {\n    config.competitorIDs = [];\n  }\n\n  if (typeof config.competitors === 'undefined') {\n    config.competitors = [];\n  }\n\n  if (typeof config.competitionIDs === 'undefined') {\n    config.competitionIDs = [];\n  }\n\n  if (typeof config.competitions === 'undefined') {\n    config.competitions = [];\n  }\n\n  if (typeof config.listenOnPushState === 'undefined') {\n    config.listenOnPushState = false;\n  }\n\n  if (\n    (config.competitors.length !== 0 || config.competitions.length !== 0) &&\n    !config.sport\n  ) {\n    throw invaildeConfig(\n      'Sport is required if \"competitions\" or \"competitors\" is passed through in the config'\n    );\n  }\n\n  return config;\n}\n","export default class Cache {\n  /**\n   * A basic cache store class\n   */\n  constructor () {\n    this.cache = {};\n  }\n\n /**\n  * Set a value against a key in the store.\n  * @param  {String} key   is the name that you want to store the data under.\n  * @param  {*}      value is the data to you want to store.\n  */\n  put (key, value) {\n    this.cache[key] = value;\n  }\n\n  /**\n   * Remove a key/value pair from the store.\n   * @param {String} key is the name of the key you want to remove.\n   */\n  remove (key) {\n    if (this.cache[key]) {\n      delete this.cache[key];\n    }\n  }\n\n  /**\n   * Retrieve a value from the store using a key.\n   * @param  {String} key is the key you want to use to select cache value in\n   *                      the store.\n   * @return {*}          A cached value from the store if it exists.\n   */\n  get (key) {\n    return this.cache[key];\n  }\n\n  /**\n   * Checks if a value exists in the store.\n   * @param  {String} key is the key you want to use to check a value exists for.\n   * @return {Boolean}    whether the value exists or not.\n   */\n  exists (key) {\n    if (this.cache[key]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * Adds customEvent method to the window if it doesn't already exist.\n */\nexport function customEvent () {\n  if (typeof window.CustomEvent === 'function') {\n    return false;\n  }\n\n  function CustomEvent (event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n\n  CustomEvent.prototype = window.Event.prototype;\n\n  window.CustomEvent = CustomEvent;\n}\n\n/**\n * Monkey patches the pushState function to emit a custome event\n * \"__f8-history-push-state\" on call.\n * @return {Object} Factories to apply and revert the polyfill changes\n */\nexport function PolyfillHistoryPushState () {\n  const _historyPushState = window.history.pushState;\n  const historyPushStateEvent = new CustomEvent('__f8-history-push-state');\n\n  /**\n   * Restores the original \"window.history.pushState\" method\n   */\n  function restore () {\n    window.history.pushState = _historyPushState;\n  }\n\n  /**\n   * Applies the event dispatcher to the \"history.pushState\" method\n   */\n  function fill () {\n    history.pushState = addEventDispatch;\n  }\n\n  /**\n   * A polyfilled version of the history.pushState\" method with the\n   * \"__f8-history-push-state\" dispatched on call.\n   */\n  function addEventDispatch () {\n    const historyPushState = _historyPushState.apply(this, arguments);\n    window.dispatchEvent(historyPushStateEvent);\n    return historyPushState;\n  }\n\n  return {\n    restore,\n    fill\n  };\n}\n","import 'whatwg-fetch';\nimport Ad from './ad/index';\nimport Cache from './cache/index';\n\nimport { customEvent, PolyfillHistoryPushState } from './polyfill';\n\nimport { getWindow, bindf8ToWindow, vaildateConfig } from './util';\n\nconst version = '1.0.0';\n\nexport default class Fresh8 {\n  /**\n   * Fresh8 is a class that handles the injection of Fresh8 ads into a target\n   * based on slot ID.\n   * @param {Object} config is the global instance configurations E.G.\n   *                        { instID: '54ad56a213fe19232b646047'\n   *                        , shouldBreakOut: false  - optinal\n   *                        , listenOnPushState: false - optinal\n   *                        , inApp: false - optional\n   *                        , endpoint: '' - optional\n   *                        }\n   *                        For more details on these options please refer to\n   *                        the readme.\n   */\n  constructor (config) {\n    // Ad class\n    this.Ad = Ad;\n    // Adds polyfills for custome events.\n    customEvent();\n    // The vaildated user config.\n    this.config = vaildateConfig(config);\n    // The window that should be used to append the ad to.\n    this.window = getWindow(this.config.shouldBreakOut);\n    // A store for the currently loaded ads.\n    this.ads = [];\n    // Cache for the creative factories.\n    this.creativeFactoryCache = new Cache();\n    // Bind the \"__f8\" object to the current window. This is rquired by our ad\n    // factories.\n    bindf8ToWindow(version, this.window);\n    // Bind the global event listener that's fired when the ad factory is loaded.\n    this._addEventLisnters();\n    // Bind a custome event for push state changes.\n    if (this.config.listenOnPushState) {\n      this.polyfillHistoryPushState = new PolyfillHistoryPushState();\n      this.polyfillHistoryPushState.fill();\n    }\n  }\n\n  /**\n   * Request an ad by slot ID, this ad will be appended to the \"appendPoint\"\n   * @param  {Object} config defines want data you want to pass to the Fresh8\n   *                         ad system when injecting your ad. E.G.\n   *                         { slotID: 'f8-001' - required\n   *                         , url: 'http://fresh8gaming.com'\n   *                         , appendPoint: 'body' - required\n   *                         , view: 'home-page' - optional\n   *                         , clickTrackingRedirect: 'http://dfp.com?r='  - optional\n   *                         , sport: 'football' - optional\n   *                         , matchID: '85623' - optional Opta ID\n   *                         , competitorIDs: ['55436'] - optional Opta ID's\n   *                         , competitors: ['Manchester United', 'Southampton'] - optinal\n   *                         , competitionIDs: ['1245'] - optional Opta ID's\n   *                         , competitions: ['Premier League'] - optional\n   *                         , brand: 'my-brand-name' - optional\n   *                         }\n   *                         For more details on these options please refer to\n   *                         the readme.\n   * @return {Promise}       This is resolved or rejected based on if the ad\n   *                         loaded successfully or not.\n   */\n  requestAd (config = {}) {\n    return new Promise(resolve => {\n      // Add Fresh8 class data to request ad config\n      config.endpoint = this.config.endpoint;\n      config.window = this.window;\n      config.creativeFactoryCache = this.creativeFactoryCache;\n      // Create a new ad and\n      const ad = new this.Ad(config);\n\n      // Store the ad for reference\n      this.ads.push(ad);\n      // Load the ad a return the promise\n      return resolve(ad.load());\n    });\n  }\n\n  /**\n   * Cleans up any event lisnters/ads added by the class\n   */\n  remove () {\n    // Remove any added event lisnters\n    this._removeEventLisnters();\n    // Remove all the ads from the page\n    this.destroyAllAds();\n    // Restore the patch history push state\n    if (this.config.listenOnPushState) {\n      this.polyfillHistoryPushState.restore();\n    }\n  }\n\n  /**\n   * Reloads all the currently active ads on the page\n   * @return {Promise} containing references to the new ads\n   */\n  reloadAllAds () {\n    const activeAds = this.ads.filter(ad => ad.active);\n    return Promise.all(activeAds.map(ad => ad.reload()));\n  }\n\n  /**\n   * Destroys all currently active ads on the page\n   * @return {Promise} resolves on completion\n   */\n  destroyAllAds () {\n    const activeAds = this.ads.filter(ad => ad.active);\n    return Promise.all(activeAds.map(ad => ad.destroy()));\n  }\n\n  /**\n   * Adds the \"__f8-creative-script-loaded\" and \"__f8-history-push-state\" event\n   * lisnters to the window\n   */\n  _addEventLisnters () {\n    this.boundOnCreativeLoaded = this._onCreativeLoaded.bind(this);\n    this.boundOnHistoryPushStateChange = this._onHistoryPushStateChange.bind(\n      this\n    );\n    this.window.addEventListener(\n      '__f8-creative-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.addEventListener(\n      '__f8-product-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.addEventListener(\n      '__f8-history-push-state',\n      this.boundOnHistoryPushStateChange\n    );\n  }\n\n  /**\n   * Removes the \"__f8-creative-script-loaded\" and \"__f8-history-push-state\" event\n   * lisnters from the window\n   */\n  _removeEventLisnters () {\n    this.window.removeEventListener(\n      '__f8-creative-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.removeEventListener(\n      '__f8-product-script-loaded',\n      this.boundOnCreativeLoaded\n    );\n    this.window.removeEventListener(\n      '__f8-history-push-state',\n      this.boundOnHistoryPushStateChange\n    );\n  }\n\n  /**\n   * Handler for the script loaded event and set the creative factory on any\n   * ads that match the creative ref and are waiting for a creativeFactory.\n   * @param {Object} event is a custom event object\n   */\n  _onCreativeLoaded (event) {\n    // Cache the creative factory so we can re used it for other ads\n    this.creativeFactoryCache.put(event.creativeRef, event.creativeFactory);\n    // Loop over the ads and check if any that require a creative factory\n    // with the matching creative ref\n    this.ads.forEach(ad => {\n      if (ad.evo) {\n        if (ad.awaitingFactory && event.config === ad.creativeRef) {\n          // Set the creative factory\n          ad._setCreativeFactory(event.productFactory);\n          // Call the creative factory loading the ad onto the page\n          ad._callCreativeFactory();\n        }\n      } else {\n        if (ad.awaitingFactory && event.creativeRef === ad.creativeRef) {\n          // Set the creative factory\n          ad._setCreativeFactory(event.creativeFactory);\n          // Call the creative factory loading the ad onto the page\n          ad._callCreativeFactory();\n        }\n      }\n    });\n  }\n\n  /**\n   * Handels the push state change event that reloads all the currently active\n   * ads on the page\n   */\n  _onHistoryPushStateChange () {\n    this.reloadAllAds().catch();\n  }\n}\n","import Fresh8 from './index';\n\n// Check if the \"Fresh8\" object has already been bound to the window.\nif (!window.Fresh8) {\n  window.Fresh8 = Fresh8;\n}\n"],"names":["invaildeConfig","message","const","error","Error","name","injectScriptFactory","creativeSource","creativeTag","document","createElement","type","src","async","body","appendChild","requestAdData","config","vaildatedConfig","endpoint","slotID","window","inApp","shouldBreakOut","linkSameWindow","competitorIDs","competitors","competitionIDs","competitions","listenOnPushState","length","sport","vaildateRequestAdConf","url","options","queryStringsOptions","Object","assign","competitorIds","map","value","encodeURIComponent","competitionIds","queryString","keys","forEach","option","prototype","toString","call","join","constructRequestURL","slot","view","clickUrl","clickTrackingRedirect","match","brand","ref","userOverrideRef","links","getElementsByTagName","location","href","canonical","i","rel","getRef","fetch","credentials","then","checkStatusCode","parseJSON","response","status","Promise","reject","json","self","support","Symbol","Blob","e","viewClasses","isDataView","obj","DataView","isPrototypeOf","isArrayBufferView","ArrayBuffer","isView","indexOf","Headers","append","normalizeName","normalizeValue","list","this","push","get","values","getAll","has","hasOwnProperty","set","callback","thisArg","getOwnPropertyNames","items","iteratorFor","entries","iterator","methods","Request","clone","_bodyInit","Body","Response","statusText","headers","redirectStatuses","redirect","RangeError","input","init","resolve","request","xhr","XMLHttpRequest","onload","rawHeaders","getAllResponseHeaders","split","line","parts","key","shift","trim","responseURL","responseText","onerror","TypeError","ontimeout","open","method","withCredentials","responseType","setRequestHeader","send","polyfill","String","test","toLowerCase","next","done","undefined","consumed","bodyUsed","fileReaderReady","reader","result","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","Uint8Array","byteLength","buffer","_initBody","_bodyText","_bodyBlob","FormData","_bodyFormData","URLSearchParams","_bodyArrayBuffer","rejected","arrayBuffer","text","readAsText","chars","Array","fromCharCode","readArrayBufferAsText","formData","decode","JSON","parse","upcased","mode","toUpperCase","referrer","form","bytes","replace","decodeURIComponent","bodyInit","ok","Ad","active","awaitingFactory","selector","creativeRef","creativePath","CSSPath","data","env","loadResolvers","adInstance","creativeFactoryCache","appendPoint","vaildateConfig","evo","load","payload","resolvers","products","product","skin","instances","this$1","adhesion","_callCreativeFactory","catch","reason","reload","destroy","_switchAdType","appEl","querySelector","parentNode","removeChild","exists","_setCreativeFactory","creativeFactory","Cache","cache","PolyfillHistoryPushState","_historyPushState","history","pushState","historyPushStateEvent","CustomEvent","addEventDispatch","historyPushState","apply","arguments","dispatchEvent","put","remove","Fresh8","version","targetWindow","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","Event","customEvent","instID","shouldBreak","let","workingWindow","top","parent","getWindow","ads","__f8","setUndefinedProperty","val","_addEventLisnters","polyfillHistoryPushState","fill","requestAd","ad","_removeEventLisnters","destroyAllAds","restore","reloadAllAds","activeAds","filter","all","boundOnCreativeLoaded","_onCreativeLoaded","bind","boundOnHistoryPushStateChange","_onHistoryPushStateChange","addEventListener","removeEventListener","productFactory"],"mappings":"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"}